name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run ktlint check
      run: ./gradlew ktlintCheck

    - name: Run detekt
      run: ./gradlew detekt

    - name: Run unit tests
      run: ./gradlew test

    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedAndroidTest

    - name: Build debug APK
      run: ./gradlew assembleDebug

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          debugdrawer/build/reports/
          sampleapp/build/reports/

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: |
          sampleapp/build/outputs/apk/debug/sampleapp-debug.apk
          sampleapp/build/outputs/apk/release/sampleapp-release.apk

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run ktlint check
      run: ./gradlew ktlintCheck

    - name: Run detekt
      run: ./gradlew detekt

    - name: Generate detekt report
      run: ./gradlew detektGenerateConfig

    - name: Upload detekt report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: detekt-report
        path: |
          debugdrawer/build/reports/detekt/
          sampleapp/build/reports/detekt/

  coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests with coverage
      run: ./gradlew jacocoTestReport

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          debugdrawer/build/reports/jacoco/
          sampleapp/build/reports/jacoco/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: |
          debugdrawer/build/reports/jacoco/test/jacocoTestReport.xml
          sampleapp/build/reports/jacoco/test/jacocoTestReport.xml
        fail_ci_if_error: true
