// Generated by Dagger (https://dagger.dev).
package com.debugdrawer.modules;

import android.content.Context;
import com.debugdrawer.utils.Logger;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FeatureFlagsModule_Factory implements Factory<FeatureFlagsModule> {
  private final Provider<Context> contextProvider;

  private final Provider<Logger> loggerProvider;

  public FeatureFlagsModule_Factory(Provider<Context> contextProvider,
      Provider<Logger> loggerProvider) {
    this.contextProvider = contextProvider;
    this.loggerProvider = loggerProvider;
  }

  @Override
  public FeatureFlagsModule get() {
    return newInstance(contextProvider.get(), loggerProvider.get());
  }

  public static FeatureFlagsModule_Factory create(Provider<Context> contextProvider,
      Provider<Logger> loggerProvider) {
    return new FeatureFlagsModule_Factory(contextProvider, loggerProvider);
  }

  public static FeatureFlagsModule newInstance(Context context, Logger logger) {
    return new FeatureFlagsModule(context, logger);
  }
}
